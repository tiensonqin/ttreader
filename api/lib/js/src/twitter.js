// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE
'use strict';

var Curry    = require("bs-platform/lib/js/curry.js");
var Twitter  = require("twitter");
var Caml_sys = require("bs-platform/lib/js/caml_sys.js");

var twitter_cred = {
  consumer_key: Caml_sys.caml_sys_getenv("TWITTER_CONSUMER_KEY"),
  consumer_secret: Caml_sys.caml_sys_getenv("TWITTER_CONSUMER_SECRET"),
  access_token_key: Caml_sys.caml_sys_getenv("TWITTER_ACCESS_TOKEN_KEY"),
  access_token_secret: Caml_sys.caml_sys_getenv("TWITTER_ACCESS_TOKEN_SECRET")
};

var client = new Twitter(twitter_cred);

function handle(callback, error, tweets, _) {
  if (error == null) {
    return Curry._1(callback, tweets);
  } else {
    console.log(error);
    return /* () */0;
  }
}

function get_user_timeline(screen_name, count, since_id, callback) {
  var params_001 = {
    screen_name: screen_name,
    count: count,
    since_id: since_id
  };
  client.get("statuses/user_timeline", params_001, (function (param, param$1, param$2) {
          return handle(callback, param, param$1, param$2);
        }));
  return /* () */0;
}

function track_stream(track, event_fun, error_fun) {
  var s = client.stream("statuses/filter", {
        track: track
      });
  s.on("data", Curry.__1(event_fun));
  s.on("error", Curry.__1(error_fun));
  return /* () */0;
}

function search(q, since_id, max_id, callback) {
  var params_001 = {
    q: q,
    count: 100,
    since_id: since_id,
    max_id: max_id
  };
  client.get("search/tweets", params_001, (function (param, param$1, param$2) {
          return handle(callback, param, param$1, param$2);
        }));
  return /* () */0;
}

exports.twitter_cred      = twitter_cred;
exports.client            = client;
exports.handle            = handle;
exports.get_user_timeline = get_user_timeline;
exports.track_stream      = track_stream;
exports.search            = search;
/* twitter_cred Not a pure module */
