// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE
'use strict';

var Util$Ttreader    = require("./util.js");
var Option$Ttreader  = require("./option.js");
var Express$Ttreader = require("./express.js");
var Twitter$Ttreader = require("./twitter.js");

var app = Express$Ttreader.express(/* () */0);


  // Add headers
app.use(function (req, res, next) {

    // Website you wish to allow to connect
    res.setHeader('Access-Control-Allow-Origin', '*');

    // Request methods you wish to allow
    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');

    // Request headers you wish to allow
    res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');

    // Set to true if you need the website to include cookies in the requests sent
    // to the API (e.g. in case you use sessions)
    res.setHeader('Access-Control-Allow-Credentials', true);

    // Pass to next layer of middleware
    next();
});

;

app.get("/users/:screen_name/:since_id", (function (req, res, _) {
        return Option$Ttreader.Let_syntax[/* bind */1](Util$Ttreader.getParam(req, "screen_name"), (function (screen_name) {
                      return Option$Ttreader.Let_syntax[/* bind */1](Util$Ttreader.getParam(req, "since_id"), (function (since_id) {
                                    Twitter$Ttreader.get_user_timeline(screen_name, 10, since_id, (function (data) {
                                            res.send(Util$Ttreader.makeSuccessJson(data));
                                            return /* () */0;
                                          }));
                                    return /* None */0;
                                  }));
                    }));
      }));

app.get("/search/:q/:since_id/:max_id", (function (req, res, _) {
        return Option$Ttreader.Let_syntax[/* bind */1](Util$Ttreader.getParam(req, "q"), (function (q) {
                      return Option$Ttreader.Let_syntax[/* bind */1](Util$Ttreader.getParam(req, "since_id"), (function (since_id) {
                                    return Option$Ttreader.Let_syntax[/* bind */1](Util$Ttreader.getParam(req, "max_id"), (function (max_id) {
                                                  Twitter$Ttreader.search(q, since_id, max_id, (function (data) {
                                                          res.send(Util$Ttreader.makeSuccessJson(data));
                                                          return /* () */0;
                                                        }));
                                                  return /* None */0;
                                                }));
                                  }));
                    }));
      }));

app.get("/tweets/:track", (function (req, res, _) {
        return Option$Ttreader.Let_syntax[/* bind */1](Util$Ttreader.getParam(req, "track"), (function (track) {
                      Twitter$Ttreader.track_stream(track, (function (data) {
                              res.send(Util$Ttreader.makeSuccessJson(data));
                              return /* () */0;
                            }), (function (error) {
                              res.send(Util$Ttreader.makeFailJson(error));
                              return /* () */0;
                            }));
                      return /* None */0;
                    }));
      }));

Express$Ttreader.App[/* listen */0](app, /* None */0, /* None */0, /* () */0);

var Let_syntax = 0;

exports.Let_syntax = Let_syntax;
exports.app        = app;
/* app Not a pure module */
